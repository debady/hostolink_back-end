import { NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';
import { ValidationPipe } from '@nestjs/common';
import { NestExpressApplication } from '@nestjs/platform-express';
import { json, urlencoded } from 'express';  // Ajout pour g√©rer le JSON et les donn√©es encod√©es
import { join } from 'path';

async function bootstrap() {
  const app = await NestFactory.create<NestExpressApplication>(AppModule);

  // Active la validation globale et filtre les champs non d√©finis dans les DTOs
  app.useGlobalPipes(
    new ValidationPipe({
      whitelist: true,  // Supprime les champs non d√©finis dans les DTOs
      forbidNonWhitelisted: true,  // Rejette les champs non autoris√©s
      transform: true,  // Convertit automatiquement les types (ex: string -> number)
    }),
  );

  // Middleware pour s'assurer que les requ√™tes JSON sont bien trait√©es
  app.use(json());  // Active le parsing du JSON
  app.use(urlencoded({ extended: true }));  // Active le parsing des URL encod√©es

  // Configuration CORS
  app.enableCors({
    origin: '*',  // Autorise toutes les origines
    methods: ['GET', 'HEAD', 'PATCH', 'POST', 'PUT', 'DELETE'],  // M√©thodes autoris√©es
    allowedHeaders: ['Content-Type', 'Authorization'],  // En-t√™tes autoris√©s
  });

  // Option : Servir des fichiers statiques si n√©cessaire
  // app.useStaticAssets(join(__dirname, '..', 'public'));

  const PORT = process.env.PORT || 3000;
  await app.listen(PORT, '0.0.0.0');

  console.log(`üöÄ Application is running on: http://localhost:${PORT}`);
}

bootstrap();
